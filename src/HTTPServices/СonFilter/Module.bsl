
#Область ОбработчикиСобытий

Функция reportПолучить(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Content-type", "application/json;charset=utf-8");
	ВариантОтчета 	= ПолучитьВариант(Запрос.ПараметрыЗапроса.Получить("id"));
	Отладка			= ПолучитьБулевоИзПараметра(Запрос.ПараметрыЗапроса.Получить("debug"));
	Ссылки			= ПолучитьБулевоИзПараметра(Запрос.ПараметрыЗапроса.Получить("link"));
	Результат 		= ОбщийМодульСервер_СonFilter.ПреобразоватьВариантОтчета(ВариантОтчета,Истина,Отладка,Ссылки);
	Если ТипЗнч(Результат)  = Тип("Строка") Тогда
		Ответ.УстановитьТелоИзСтроки(Результат);
	ИначеЕсли ТипЗнч(Результат)  = Тип("Структура") Тогда
		Ответ.КодСостояния 	= 400; //см.КоннекторHTTP_POS5000.ОписанияКодовСостоянийHTTP
		Ответ.Причина 		= Результат.Описание;
		Ответ.УстановитьТелоИзСтроки(ОбщийМодульСервер_СonFilter.СтрокаJSON(Результат));
	КонецЕсли;		
	Возврат Ответ;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Получить булево из параметра запроса
// 
// Параметры:
//  Значение - Произвольный - Значение
// 
// Возвращаемое значение:
//  Булево 
Функция ПолучитьБулевоИзПараметра(Значение)
	Попытка
		Результат = Булево(Число(Значение));
	Исключение
		Результат = Ложь;
	КонецПопытки;		
	Возврат Результат;	
КонецФункции	

Функция ПолучитьВариант(Знач Идентификатор)
	Результат = Неопределено;
	Если ЗначениеЗаполнено(Идентификатор) Тогда
		Если Не СтрНайти(Идентификатор,"-")>0 Тогда
			//это навигационная ссылка, ее проще получить из интерфеса
			Идентификатор = вПреобразоватьИдентификатор(Идентификатор);		
		КонецЕсли;	
		Попытка
			Идентификатор = Новый УникальныйИдентификатор(Идентификатор);			
		Исключение
			Возврат Результат	
		КонецПопытки;
		Результат = Справочники.ВариантыОтчетов.ПолучитьСсылку(Идентификатор);
	КонецЕсли;	
	Возврат Результат; 	
КонецФункции

//Выполняет преобразование из ID хранящегося в таблицах SQL в строку уникального идентификатора
//и обратно. Достигается за счет перестановки.
//Параметры:
//	Строка	-Строка- Уникальный идентификатор, который нужно преобразовать.
//	Прямое  -Булево- Режим, если Истина, тогда  из SQL в 1С, ЛОжь- наоборот. 
//Возвращаемое значение:
//	-Строка - Уникальный идентификатор.
Функция вПреобразоватьИдентификатор(Строка,Прямое=Истина) Экспорт
	Если Прямое Тогда
		//SQL-BE075493F99B1D424CF05D7AF8B48B42
		//Пол-F8B48B42-5D7A-4CF0-9354-07BE9BF9421D
		//Нуж-f8b48b42-5d7a-4cf0-be07-5493f99b1d42
		ЧистаяСтрока 	= СтрЗаменить(СтрЗаменить(Строка, "0X", ""), "0x", "");
		Результат		= Сред(ЧистаяСтрока, 25, 8) + "-";
		Результат		= Результат+Сред(ЧистаяСтрока, 21, 4)+ "-";
		Результат		= Результат+Сред(ЧистаяСтрока, 17, 4) + "-";
		Результат		= Результат+Сред(ЧистаяСтрока, 1, 4) + "-";
		Результат		= Результат+Сред(ЧистаяСтрока, 5, 12);
	Иначе
		//Обратное преобразование
		//1c-f8b48b42-5d7a-4cf0-be07-5493f99b1d42
		//1c-f8b48b425d7a4cf0be075493f99b1d42
		//SQL-0xBE075493F99B1D424CF05D7AF8B48B42
		ЧистаяСтрока = СтрЗаменить(Строка, "-", "");
		Результат = Сред(ЧистаяСтрока, 17, 4)+Сред(ЧистаяСтрока, 21, 12)+Сред(ЧистаяСтрока, 13, 4)+Сред(ЧистаяСтрока, 9, 4)+Сред(ЧистаяСтрока, 1, 8);
		Результат ="0x"+ВРег(Результат);
	КонецЕсли;	
	Возврат Результат;
КонецФункции

#КонецОбласти	

